# Generated by Django 4.2 on 2023-04-09 08:12

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('admin_fio', models.TextField(verbose_name='ФИО')),
                ('admin_login', models.CharField(max_length=255, verbose_name='Логин')),
                ('admin_password', models.CharField(max_length=255, verbose_name='Пароль')),
            ],
            options={
                'verbose_name': 'Админ',
                'verbose_name_plural': 'Админы',
                'ordering': ['admin_login', 'admin_fio'],
            },
        ),
        migrations.CreateModel(
            name='Games',
            fields=[
                ('games_id', models.AutoField(primary_key=True, serialize=False)),
                ('games_date', models.DateField(verbose_name='Дата')),
            ],
            options={
                'verbose_name': 'Игра',
                'verbose_name_plural': 'Игры',
                'ordering': ['games_vidsporta', 'games_date'],
            },
        ),
        migrations.CreateModel(
            name='Stadion',
            fields=[
                ('stadion_name', models.TextField(primary_key=True, serialize=False)),
                ('stadion_addres', models.TextField(verbose_name='Адрес')),
                ('stadion_capacity', models.IntegerField(verbose_name='Вместимость')),
            ],
            options={
                'verbose_name': 'Стадион',
                'verbose_name_plural': 'Стадионы',
                'ordering': ['stadion_name'],
            },
        ),
        migrations.CreateModel(
            name='Treners',
            fields=[
                ('treners_id', models.AutoField(primary_key=True, serialize=False)),
                ('treners_fio', models.CharField(max_length=255, verbose_name='ФИО')),
                ('treners_passport', models.TextField(verbose_name='Паспорт')),
                ('treners_kval', models.TextField(verbose_name='Квалификация')),
                ('treners_team', models.TextField(verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Тренер',
                'verbose_name_plural': 'Тренеры',
                'ordering': ['treners_fio'],
            },
        ),
        migrations.CreateModel(
            name='VidSporta',
            fields=[
                ('vidsporta_name', models.TextField(primary_key=True, serialize=False, verbose_name='Вид спорта')),
            ],
            options={
                'verbose_name': 'Вид спорта',
                'verbose_name_plural': 'Виды спорта',
                'ordering': ['vidsporta_name'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.AutoField(primary_key=True, serialize=False)),
                ('team_name', models.TextField(verbose_name='Название команды')),
                ('team_type', models.BooleanField(default=False, verbose_name='Командный или НЕТ')),
                ('team_trener', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CreateDatabase.treners', verbose_name='Тренер')),
                ('team_vidsporta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CreateDatabase.vidsporta', verbose_name='Вид спорта')),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
                'ordering': ['team_vidsporta', 'team_name'],
            },
        ),
        migrations.CreateModel(
            name='Sportsmen',
            fields=[
                ('sportsmen_id', models.AutoField(primary_key=True, serialize=False)),
                ('sportsmen_fio', models.CharField(max_length=255, verbose_name='ФИО')),
                ('sportsmen_age', models.IntegerField(verbose_name='Возраст')),
                ('sportsmen_team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CreateDatabase.team', verbose_name='Команда')),
            ],
            options={
                'verbose_name': 'Спортсмен',
                'verbose_name_plural': 'Спортсмены',
                'ordering': ['sportsmen_fio', 'sportsmen_age'],
            },
        ),
        migrations.CreateModel(
            name='ResultsTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resultteam_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CreateDatabase.games')),
                ('resultteam_result', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='CreateDatabase.team', verbose_name='Победитель')),
                ('resultteam_team1', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='CreateDatabase.team', verbose_name='Команда 1')),
                ('resultteam_team2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='+', to='CreateDatabase.team', verbose_name='Команда 2')),
            ],
            options={
                'verbose_name': 'Промежуточный результат команд',
                'verbose_name_plural': 'Промежуточные результаты команд',
                'ordering': ['resultteam_id'],
            },
        ),
        migrations.CreateModel(
            name='ResultsSolo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('game_result', models.IntegerField(verbose_name='Результаты')),
                ('resultsolo_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CreateDatabase.games')),
                ('resultsolo_solo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CreateDatabase.team', verbose_name='ФИО игрока')),
            ],
            options={
                'verbose_name': 'Промежуточный результат соло',
                'verbose_name_plural': 'Промежуточные результаты соло',
                'ordering': ['resultsolo_id'],
            },
        ),
        migrations.AddField(
            model_name='games',
            name='games_place',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CreateDatabase.stadion', verbose_name='Место проведения'),
        ),
        migrations.AddField(
            model_name='games',
            name='games_vidsporta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CreateDatabase.vidsporta', verbose_name='Вид спорта'),
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition_date', models.DateField(verbose_name='Дата')),
                ('competition_mesto', models.IntegerField(verbose_name='Место победителя')),
                ('competition_place', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CreateDatabase.stadion', verbose_name='Место проведения')),
                ('competition_team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CreateDatabase.team', verbose_name='Команда')),
                ('competition_vidsporta', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='CreateDatabase.vidsporta', verbose_name='Вид спорта')),
            ],
            options={
                'verbose_name': 'Финальный результат',
                'verbose_name_plural': 'Финальные результаты',
                'ordering': ['competition_vidsporta', 'competition_date'],
            },
        ),
    ]
